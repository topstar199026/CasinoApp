{"version":3,"sources":["webpack:///./node_modules/color-convert/route.js","webpack:///./node_modules/color-convert/conversions.js","webpack:///./node_modules/color-convert/index.js"],"names":["conversions","deriveBFS","fromModel","graph","models","Object","keys","len","length","i","distance","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","to","args","wrapConversion","toModel","path","fn","cur","conversion","module","exports","cssKeywords","reverseKeywords","key","hasOwnProperty","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","model","Error","defineProperty","value","h","l","r","g","b","min","Math","max","delta","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","x","y","currentClosestDistance","Infinity","pow","z","t1","t2","t3","val","smin","lmin","hi","floor","f","p","q","t","sl","vmin","n","wh","bl","ratio","m","y2","x2","z2","a","atan2","PI","sqrt","hr","cos","sin","arguments","round","ansi","color","mult","rem","string","toString","toUpperCase","substring","match","colorString","split","map","char","join","integer","parseInt","hue","chroma","mg","pure","w","route","forEach","routes","wrappedFn","Array","prototype","slice","call","result","wrapRounded","raw","wrapRaw"],"mappings":"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","file":"js/vendor/color-convert.js","sourcesContent":["var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n"],"sourceRoot":""}