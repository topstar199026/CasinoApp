{"version":3,"sources":["webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js"],"names":["root","exports","nodeType","module","freeGlobal","global","window","self","punycode","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","map","array","fn","length","result","mapDomain","string","parts","split","replace","join","ucs2decode","value","extra","output","counter","charCodeAt","push","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","baseMinusTMin","base","decode","input","out","basic","j","index","oldi","w","t","baseMinusT","codePoint","inputLength","i","n","bias","lastIndexOf","splice","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","test","slice","toLowerCase","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","Uint8Array","__proto__","prototype","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","write","fromString","obj","isBuffer","len","checked","copy","buffer","val","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","call","arr","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","codePoints","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst"],"mappings":"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","file":"js/vendor/node-libs-browser.js","sourcesContent":["/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"],"sourceRoot":""}